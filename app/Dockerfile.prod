###########
# BUILDER #
###########

# オフィシャルのalpineベースのpythonイメージをpull
FROM python:3.8.3-alpine as builder

# ワークディレクトリーを設定
WORKDIR /usr/src/app

# 環境変数を設定
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# psycopg2の依存パッケージをインストール
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev jpeg-dev zlib-dev libjpeg

# lint
RUN pip install --upgrade pip
# RUN pip install flake8
COPY . .
# RUN flake8 --ignore=E501,F401 .

# 必要なpythonのパッケージをインストール
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# オフィシャルのalpineベースのpythonイメージをpull
FROM python:3.8.3-alpine

# appユーザーディレクトリを作成
RUN mkdir -p /home/app

# appユーザーを作成
RUN addgroup -S app && adduser -S app -G app

# 必要なディレクトリを作成
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# 依存パッケージをインストール
RUN apk update && apk add \
    libpq \
    build-base \
    # wget
    openssl \
    # dev関連
    git \
    bash \
    sudo \
    py3-pip \
    # Pillow
    freetype-dev \
    lcms2-dev \
    openjpeg-dev \
    tiff-dev \
    tk-dev \
    tcl-dev \
    harfbuzz-dev \
    fribidi-dev
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# entrypoint-prod.shをコピー
COPY ./entrypoint.prod.sh $APP_HOME

# プロジェクトをコピー
COPY . $APP_HOME

# appユーザーへ所有者を変更
RUN chown -R app:app $APP_HOME

# ユーザーをappへ変更
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]